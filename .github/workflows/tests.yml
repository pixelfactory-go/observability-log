name: tests

on:
  push:
    branches:
      - "master"
    tags:
      - "v*"
  pull_request:

jobs:
  test:
    strategy:
      matrix:
        go-version: [1.22.x, 1.23.x]
        platform: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run go fmt
        if: runner.os != 'Windows'
        run: make fmt

      - name: Run golangci-lint
        if: runner.os != 'Windows'
        uses: golangci/golangci-lint-action@v3

      - name: Run go test
        run: make test

      - name: Upload coverage to Codecov
        if: runner.os != 'Windows'
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        if: success() && startsWith(github.ref, 'refs/tags/') && runner.os != 'Windows'
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
